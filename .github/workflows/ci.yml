name: CI
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run unit tests
        env:
          PYTHONPATH: "."
        run: |
          pytest tests/test_unit.py --maxfail=1 --disable-warnings -v
          coverage run -m pytest tests/test_unit.py && coverage report -m

  bdd-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run BDD tests
        env:
          PYTHONPATH: "."
        run: |
          behave tests/test_bdd.py --no-capture

  integration-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install docker-compose -y
      - name: Start LocalStack with Docker Compose
        run: docker-compose up -d
      - name: Wait for LocalStack to be ready
        run: |
          echo "Waiting for LocalStack to be ready..."
          for i in {1..30}; do
            if curl -s http://localhost:4566/health | grep -q "running"; then
              echo "LocalStack is ready!"
              break
            fi
            echo "Waiting... ($i/30)"
            sleep 2
          done
          curl -s http://localhost:4566/health
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run pylint
        run: |
          pylint --fail-under 7 app
          exitcode="$?"
          echo "exitcode=$exitcode" >> $GITHUB_OUTPUT
          exit "$exitcode"
      - name: Run pytest
        env:
          PYTHONPATH: "."
        run: |
          pytest --maxfail=1 --disable-warnings -v
      - name: Run coverage
        env:
          PYTHONPATH: "."
        run: |
          coverage run -m pytest
          coverage report -m
      - name: Teardown Docker
        if: always()
        run: docker-compose down